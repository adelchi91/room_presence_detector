name: Drift Detection and Retraining

on:
  push:
    branches:
      - main
      - master

jobs:
  detect_and_retrain:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Drift Detection
        run: python drift_detection_script.py

      - name: Check Drift Status
        id: check_drift
        run: |
          echo "drift_detected=$(python -c "print('true' if '$(cat drift_detection_result.txt)' == 'Yes!' else 'false')")" >> $GITHUB_ENV
        # run: echo "::set-output name=drift_detected::$(python -c "print('true' if '$(cat drift_detection_result.txt)' == 'Yes!' else 'false')")"

      - name: Retrain Model (if drift detected)
        if: env.drift_detected == 'true'
        # steps.check_drift.outputs.drift_detected == 'true'
        run: python model.py

      - name: Commit Changes
        run: |
          git config --global user.email "asta.adelchi@gmail.com"
          git config --global user.name "adelchi91"
          # Check if there are changes before committing
          if [[ -n $(git diff --exit-code) ]]; then
            git add .
            git commit -m "Automated update due to drift detection"
            git push https://adelchi91:${{ secrets.GITHUB_TOKEN }}@github.com/adelchi91/room_presence_detector.git
          else
            echo "No changes detected. Skipping commit."
          fi


      - name: Build and Push Docker Image
        if: env.drift_detected == 'true'
        run: |
          docker build -t testing_image -f Dockerfile .
          docker tag testing_image adelchijacques/room_presence_classifier:room_presence_new
          docker login -u adelchijacques -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push adelchijacques/room_presence_classifier:room_presence_new

      - name: Deploy to AWS ECS
        if: env.drift_detected == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1  
          ecs-cluster: room_detection_cluster  # Replace with your ECS cluster name
          app-name: room_detection_task  # 
          container-image-name: adelchijacques/room_presence_classifier:room_presence_new

      - name: Create task
        if: env.drift_detected == 'true'
        run: |
          aws ecs register-task-definition \
            --container-definitions '[{"name":"room_presence_classifier","image":"adelchijacques/room_presence_classifier:room_presence_new","memory":512}]' \
            --family room_detection_task

      # haven't created an ECS service separately, you can use the aws ecs run-task command to run a one-off task 
      - name: Run ECS Task
        if: env.drift_detected == 'true'
        run: | 
          aws ecs run-task --cluster room_detection_cluster --task-definition room_detection_task --region eu-west-1 
